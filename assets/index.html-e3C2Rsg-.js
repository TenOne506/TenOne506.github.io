import{_ as i,c as a,a as n,o as t}from"./app-Qg1dpqDJ.js";const h={};function k(l,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="电话号码的字母组合" tabindex="-1"><a class="header-anchor" href="#电话号码的字母组合"><span><a href="https://leetcode.cn/problems/letter-combinations-of-a-phone-number/description/" target="_blank" rel="noopener noreferrer">电话号码的字母组合</a></span></a></h2><p>给定一个仅包含数字 <code>2-9</code> 的字符串，返回所有它能表示的字母组合。答案可以按 <strong>任意顺序</strong> 返回。 给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。<br> string MAPPING[10] = {&quot;&quot;, &quot;&quot;, &quot;abc&quot;, &quot;def&quot;, &quot;ghi&quot;, &quot;jkl&quot;, &quot;mno&quot;, &quot;pqrs&quot;, &quot;tuv&quot;, &quot;wxyz&quot;};</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p>示例 1：<br> 输入：digits = &quot;23&quot;<br> 输出：[&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]<br> 示例 2：<br> 输入：digits = &quot;&quot;<br> 输出：[]<br> 示例 3：<br> 输入：digits = &quot;2&quot;<br> 输出：[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</p></div></div><p>这题思路也和之前一样，只是要注意的是，这里的枚举是枚举当前选哪个，而不是枚举选或不选。</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">  string </span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">MAPPING</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">10</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;abc&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;def&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;ghi&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;jkl&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;mno&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;pqrs&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;tuv&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;wxyz&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">  vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> letterCombinations</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">string</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> digits</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">digits</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {};</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    string </span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">temp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n,</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&#39; &#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    function</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">void</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> dfs</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">](</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> i</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">){</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">      if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">n</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;"> return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> ;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">      if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">n</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">        res</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">temp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">      }</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">            //枚举当前选哪个</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">      for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">char</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> c </span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">:</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> MAPPING</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">digits</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i] </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &#39;0&#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">]){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">        temp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> =</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> c</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">        fs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">i</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">      }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    };</span></span>
<span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">    dfs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">  }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const p=i(h,[["render",k]]),F=JSON.parse('{"path":"/code/gwtromz4/","title":"电话号码字母组合","lang":"zh-CN","frontmatter":{"title":"电话号码字母组合","createTime":"2024/12/15 17:38:03","permalink":"/code/gwtromz4/"},"readingTime":{"minutes":0.88,"words":264},"git":{"updatedTime":1734266642000,"contributors":[{"name":"TenThousandOne","username":"TenThousandOne","email":"w13852770506@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TenThousandOne?v=4","url":"https://github.com/TenThousandOne"}],"changelog":[{"hash":"64700a04a1975fc5930b605133d302d4a4e87731","time":1734266642000,"email":"w13852770506@163.com","author":"TenThousandOne","message":"update leetcode"}]},"filePathRelative":"notes/code/回溯/电话号码字母组合.md","headers":[]}');export{p as comp,F as data};
