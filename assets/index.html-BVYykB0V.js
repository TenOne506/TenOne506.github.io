import{_ as i,c as a,a as n,o as h}from"./app-Qg1dpqDJ.js";const l={};function k(t,s){return h(),a("div",null,s[0]||(s[0]=[n(`<h3 id="最长递增子序列" tabindex="-1"><a class="header-anchor" href="#最长递增子序列"><span><a href="https://leetcode.cn/problems/longest-increasing-subsequence/description/" target="_blank" rel="noopener noreferrer">最长递增子序列</a></span></a></h3><p>给你一个整数数组<code>nums</code>，找到其中最长严格递增子序列的长度。</p><p>子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p>示例 1：</p><p>输入：nums = [10,9,2,5,3,7,101,18]</p><p>输出：4</p><p>解释：最长递增子序列是 [2,3,7,101]，因此长度为 4</p></div></div><p>考虑以i为结尾的最长递增子序列长度。从i向前来枚举，找到比i小的元素j，那么dp[i] = dp[j] + 1。</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> lengthOfLIS</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">        int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> nums</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> memo</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n);</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">        auto</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> dfs </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> [</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">](</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">this</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> auto</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&amp;&amp;</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> dfs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">,</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> i</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) -&gt; </span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">            int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&amp;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> res </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> memo</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i];</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 注意这里是引用</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">res </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 之前计算过</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                return</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> i</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> j</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[j]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i])</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">                    res </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> max</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">,</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> dfs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">j</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">));</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            return</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;"> res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 加一提到循环外面</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        };</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">        int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> ans </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            ans </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> max</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(ans, </span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">dfs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(i));</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> ans;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码自然而然可以用动态规划来进行优化。</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> lengthOfLIS</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">        int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> nums</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            return</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">        int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> INT_MIN;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> dp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">i) {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i; </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">j) {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[j] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                    dp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> max</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">dp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i], </span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">dp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[j] </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            res </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> max</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(res, </span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">dp</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么最佳的方案nlogn复杂度的方案有些复杂，详情可看<a href="https://www.bilibili.com/video/BV1ub411Q7sB?vd_source=b64ee920a6e79bfe6582a292c3a4f9dc&amp;spm_id_from=333.788.videopod.sections" target="_blank" rel="noopener noreferrer">视频</a></p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> lengthOfLIS</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> nums</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> g;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> x : nums) {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">            auto</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> it </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> ranges</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">lower_bound</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(g, x);</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (it </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> g</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">end</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                g</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(x);</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // &gt;=x 的 g[j] 不存在</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">                *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">it </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> x;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> g</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">size</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const e=i(l,[["render",k]]),F=JSON.parse('{"path":"/code/21u1dt6u/","title":"最长递增子序列","lang":"zh-CN","frontmatter":{"title":"最长递增子序列","createTime":"2025/02/26 16:04:35","permalink":"/code/21u1dt6u/"},"readingTime":{"minutes":1.43,"words":428},"git":{"updatedTime":1740906779000,"contributors":[{"name":"TenOne506","username":"TenOne506","email":"w13852770506@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TenOne506?v=4","url":"https://github.com/TenOne506"}],"changelog":[{"hash":"041c6da155070fdaf7a932b918629c1436129410","time":1740906779000,"email":"w13852770506@163.com","author":"TenOne506","message":"update tencent interview"}]},"filePathRelative":"notes/code/动态规划/最长递增子序列.md","headers":[]}');export{e as comp,F as data};
