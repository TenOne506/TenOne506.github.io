import{_ as i,c as a,a as n,o as l}from"./app-Qg1dpqDJ.js";const h={};function k(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>不知道为什么英伟达驱动自带的录屏只录了前面两分钟，后面就没了。下次开obs录吧，录屏仅供事后复盘。现在凭记忆记录一下。</p><h3 id="一面" tabindex="-1"><a class="header-anchor" href="#一面"><span>一面</span></a></h3><p>一上来面试官先自我介绍，腾讯TEG云架构平台部，他们是做存储的。后面也问了一些存储的，可是我不是这方向的，尽管有很多看过听过，但都没深入了解过，面试官问起来只能说不懂。</p><p>后面手撕，最长递增子序列，有印象，但不多，尝试写了一会之后，想起来好像是动态规划，再试了一下，写出来了。但是还是最后返回结果的时候，不应该是dp[n-1]，而是应该是max(dp)。这点被面试官提醒了。 手撕完之后就是正常面试环节</p><ol><li>了解raft选举过程吗，我说我看过6.824.但是都忘了，面试官问我论文，我说看过，但是真的忘了，都好久了事了。</li><li>了解数据库吗，mysql,redis,mongodb,我说用过前两个。但还是没深入了解过。后面也没问了。</li><li>了解跳表和布隆过滤器吗，我其实听过也看过，跳表我印象中就是一个高效的数据结构，用来查找存储数据。布隆过滤器的印象在数据库中好像有，具体干什么我也忘了。这两个我也直接说不知道了</li><li>C++上来给了一道代码题，问你输出，我把代码贴在下面。这个代码应该从程序的内存布局角度来考虑，就能答上来了。我当时不知道怎么想，虚函数说错了，后面面试官思路提醒下，才说对。代码的输出我私下也跑过了。</li></ol><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Test</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">    constexpr</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> static</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> a </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 100</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> b </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 200</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> PrintA</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> { </span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;">std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;a=&quot;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> a </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::endl; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> PrintB</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> { </span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;">std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;b=&quot;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> b </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::endl; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> FuncA</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> { </span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;">std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;hello world...&quot;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;&lt;</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::endl; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">    static</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> FuncB</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> { </span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;">std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;a=&quot;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> a </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::endl; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">    virtual</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> FuncC</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> { </span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;">std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;hello world 3!&quot;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> &lt;&lt;</span><span style="--shiki-light:#35A77C;--shiki-dark:#EEF0F9;"> std</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">::endl; }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> main</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">()</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    Test </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">*</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">ptr </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> nullptr</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //  下面几个函数的调用， 分别会发生什么， 给出输出预期以及具体原因.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //ptr-&gt; PrintA();</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> //输出a=100</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //ptr-&gt; PrintB();</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> //报错</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //ptr-&gt; FuncA();</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> //输出hello world...</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //ptr-&gt; FuncB();</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> //输出a=100</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    //ptr-&gt; FuncC();//报错 昨天这里说错了在他提醒下说对了</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    return</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>thread_local的作用。</li><li>让我设计一个全局计数器，如何来设计。我就说一个锁，一个原子变量。他没追问了。</li><li>内存序，六个，我说知道，具体记不清了，他也理解。</li><li>智能指针，这个正常说，也没往深处问</li><li>使用grep从文件中读取某一行信息，这个过程中，操作系统会干什么，说的越细越好。我也不知道我说的细不细</li><li>异步IO,听说过AIO,BIO吗。异步IO我知道，那两个IO没听过。</li><li>拷打项目</li><li>反问环节</li></ol><p>最大的问题是面我的面试官，是他们TEG云架构平台部下面的小部门做存储的，简历上项目和存储没有一点关系，当时觉得为什么要面呢，当时觉得肯定凉了。</p><p>当晚流程显示进入复试，但是时至3.1号都没有约2面。但我看牛客网上有人说，长时间不约二面等于挂了。祝我好运吧。</p><h2 id="二面" tabindex="-1"><a class="header-anchor" href="#二面"><span>二面</span></a></h2><p>现在看来纯纯kpi，面试一开始纯聊天，问我哪人，我说江苏扬州，他说工作地点深圳怎么看的，我说没问题。接着又反问我，不应该更倾向于上海和杭州吗，我又和他说了一次无所谓，去哪都一样。后面又问我对分布式有哪些了解，我只记得本科学的Hadoop和他说一通，这样大概半小时过去了，让我做题。还问我一面写的什么题，写出来没有，我实话实话，整体思路没问题，在最后结果上被面试官提醒了。</p><p>第一题大概是力扣上的螺旋矩阵，但不完全一样大概如下：</p><p>给定一个数字 <code>n</code> 直接输出他的螺旋矩阵：</p><p>输入示例：4</p><p>输出示例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span>1  2  3  4</span></span>
<span class="line"><span>12 13 14 5</span></span>
<span class="line"><span>11 16 15 6</span></span>
<span class="line"><span>10 9  8  7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我大概采用了力扣上的思路，构造了一个 <code>n*n</code> 的矩阵往里面螺旋填数，写好之后，面试官说他的意思是要直接打印出来这个矩阵，不要用矩阵填数这种思路，我当时楞了一下，后面她看看说你这样也可以吧。后面又做了一题打印Zig矩阵的。 他的思路我大概知道，只是当时没想过，后面我用大模型写了一个如下：</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">// 计算 (i, j) 位置的值</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> getSpiralValue</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> i</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">,</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> j</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">,</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;"> int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> n</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    // 计算当前层的最小值</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> min</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">min</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(i, n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i), </span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">min</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(j, n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> j));</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    // 计算当前层的起始值</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> startValue </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 4</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">*</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer);</span></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    // 根据位置确定具体值</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer) {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 顶部行</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> startValue </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (j </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;"> if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer) {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 右侧列</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> startValue </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (i </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;"> if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer) {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 底部行</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> startValue </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> j) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 左侧列</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> startValue </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 3</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> *</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;"> -</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> layer </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i) </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> printSpiralMatrix</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> n</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; j</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> getSpiralValue</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(i, j, n) </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot;</span><span style="--shiki-light:#8DA101;--shiki-dark:#EEF0F9;">\\t</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二题就是打印一个Z字形的矩阵 输入示例：4 输出示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span>1  2  6  7</span></span>
<span class="line"><span>3  5  8  13</span></span>
<span class="line"><span>4  9  12 14</span></span>
<span class="line"><span>10 11 15 16</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我的思路就是对角线上坐标 i+j等于一个定值，然后转变方向就可以了。延用往数组里填值的思路。整个代码就差一点点就可以通过了，当时查了半天不知道哪问题，他那界面又不好debug，最后我和他说实在找不出来，他就直接进行反问环节了。 代码我放在下面，第16行注释是原来我写的，问题就出现在这，最后一个数填进去的时候，下标会溢出了。</p><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" style="--shiki-light:#5c6a72;--shiki-dark:#eef0f9;--shiki-light-bg:#fdf6e3;--shiki-dark-bg:#17191e;"><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">void</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> printzigarray</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> n</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n, </span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(n, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 对角线和</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> flag </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 控制方向</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">    res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">][</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    while</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (val </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">*</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        s</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (s </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)) {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 下半部分</span></span>
<span class="line highlighted"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">            //int temp = s % (n - 1); </span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">            int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">); </span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (flag </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">%</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> ==</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                while</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    x</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    y</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">--</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                    res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> y;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                while</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> temp) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    y</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    x</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">--</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                    res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;"> // 上半部分</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">            if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (flag </span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">%</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 2</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;"> ==</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                while</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    x</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    y</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">--</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                    res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            } </span><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">else</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                y </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">                while</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (x </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    y</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    x</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">--</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">                    res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[x][y] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> val;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                    val</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">                }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        flag</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#939F91;--shiki-light-font-style:italic;--shiki-dark:#EEF0F98F;--shiki-dark-font-style:italic;">    // 输出矩阵</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; i </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">i) {</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">        for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;"> 0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">; j </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n; </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">j) {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> res</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i][j] </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;"> &quot; &quot;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">        cout </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>TEG云架构平台</p><ul><li>2.19 约 2.25 一面 一个小时秒过。</li><li>3.3 约 3.5 二面，怀疑kpi，纯聊天加做题，第一道做太快了，又做了一道，差一点做出来了，总共耗时1个半小时。第二天晚上挂了。</li></ul>`,25)]))}const F=i(h,[["render",k]]),e=JSON.parse('{"path":"/interview/0lu03eoc/","title":"腾讯云基础架构部门","lang":"zh-CN","frontmatter":{"title":"腾讯云基础架构部门","createTime":"2025/02/25 21:33:28","permalink":"/interview/0lu03eoc/"},"readingTime":{"minutes":6.13,"words":1840},"git":{"updatedTime":1742734258000,"contributors":[{"name":"TenOne506","username":"TenOne506","email":"w13852770506@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TenOne506?v=4","url":"https://github.com/TenOne506"}],"changelog":[{"hash":"c1df850ae81bd25fbe0cefee42ae04854808addf","time":1742734258000,"email":"w13852770506@163.com","author":"TenOne506","message":"update tencent teg machine learing platform"}]},"filePathRelative":"notes/interview/腾讯云基础架构部门.md","headers":[]}');export{F as comp,e as data};
