import{_ as i,c as a,a as n,o as h}from"./app-D8Pywd0Q.js";const l={};function k(t,s){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="找到字符串中所有字母的异位词" tabindex="-1"><a class="header-anchor" href="#找到字符串中所有字母的异位词"><span><a href="https://leetcode.cn/problems/find-all-anagrams-in-a-string/description/" target="_blank" rel="noopener noreferrer">找到字符串中所有字母的异位词</a></span></a></h2><p>给定两个字符串 <code>s</code> 和 <code>p</code>，找到 <code>s</code> 中所有 <code>p</code> 的 <strong>异位词</strong> 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。 异位词 指由相同字母重排列形成的字符串（包括相同的字符串）。</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p>示例 1: <br> 输入: s = &quot;cbaebabacd&quot;, p = &quot;abc&quot;<br> 输出: [0,6]<br> 解释:<br> 起始索引等于 0 的子串是 &quot;cba&quot;, 它是 &quot;abc&quot; 的异位词。<br> 起始索引等于 6 的子串是 &quot;bac&quot;, 它是 &quot;abc&quot; 的异位词。<br> 示例 2:<br> 输入: s = &quot;abab&quot;, p = &quot;ab&quot;<br> 输出: [0,1,2]<br> 解释:<br> 起始索引等于 0 的子串是 &quot;ab&quot;, 它是 &quot;ab&quot; 的异位词。<br> 起始索引等于 1 的子串是 &quot;ba&quot;, 它是 &quot;ab&quot; 的异位词。<br> 起始索引等于 2 的子串是 &quot;ab&quot;, 它是 &quot;ab&quot; 的异位词。</p></div></div><p>用两个数组代替哈希表来记录 s 和 p 中字符出现的次数。然后就可以开始滑动窗口了。</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">  vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> findAnagrams</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">string</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> s</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">,</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> string</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> p</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> m </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> s</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">length</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">    int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> n </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;"> p</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">length</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">();</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> (n</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">m){</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">      return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">            </span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> s_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">26</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> p_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">26</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">, </span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">n;i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      s_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">s</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&#39;a&#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      p_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">p</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&#39;a&#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(s_cnt</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">p_cnt){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      res</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">0</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">int</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">n;i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">m;i</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      s_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">s</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">n]</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&#39;a&#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">--</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      s_cnt</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">s</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[i]</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#DFA000;--shiki-dark:#FFD493;">&#39;a&#39;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">]</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">++</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">      if</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(s_cnt</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">==</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">p_cnt){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">        res</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(i</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">-</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">n</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">+</span><span style="--shiki-light:#DF69BA;--shiki-dark:#FFD493;">1</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">      }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">  }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const e=i(l,[["render",k],["__file","index.html.vue"]]),F=JSON.parse('{"path":"/code/42s1n4g0/","title":"找到字符串中所有字母的异位词","lang":"zh-CN","frontmatter":{"title":"找到字符串中所有字母的异位词","createTime":"2024/12/13 20:27:09","permalink":"/code/42s1n4g0/"},"headers":[],"readingTime":{"minutes":1.19,"words":358},"git":{"updatedTime":1734096157000,"contributors":[{"name":"TenThousandOne","username":"TenThousandOne","email":"w13852770506@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TenThousandOne?v=4","url":"https://github.com/TenThousandOne"}],"changelog":[{"hash":"46130eeb1959ce621b34a15fbde6540e52ebb00b","date":1734096157000,"email":"w13852770506@163.com","author":"TenThousandOne","message":"prepare interview","commitUrl":"https://github.com/TenOne506/TenOne506.github.io/commit/46130eeb1959ce621b34a15fbde6540e52ebb00b"}]},"filePathRelative":"notes/code/滑动窗口/找到字符串中所有字母的异位词.md","bulletin":false}');export{e as comp,F as data};
