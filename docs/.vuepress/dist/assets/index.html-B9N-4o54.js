import{_ as i,c as a,a as n,o as t}from"./app-D8Pywd0Q.js";const e={};function l(h,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="字母异位组分词" tabindex="-1"><a class="header-anchor" href="#字母异位组分词"><span><a href="https://leetcode.cn/problems/group-anagrams/" target="_blank" rel="noopener noreferrer">字母异位组分词</a></span></a></h2><p>给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。</p><p>字母异位词 是由重新排列源单词的所有字母得到的一个新单词。</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p>示例 1:<br> 输入: strs = [&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]<br> 输出: [[&quot;bat&quot;],[&quot;nat&quot;,&quot;tan&quot;],[&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;]]<br> 示例 2:<br> 输入: strs = [&quot;&quot;]<br> 输出: [[&quot;&quot;]]<br> 示例 3:<br> 输入: strs = [&quot;a&quot;]<br> 输出: [[&quot;a&quot;]]</p></div></div><p>直接用一个map来记录，对应的key是排序后的字符串，value是对应的字符串。</p><div class="language-c++ line-numbers-mode" data-ext="c++" data-title="c++"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes everforest-light houston vp-code"><code><span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">class</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;"> Solution</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">public</span><span style="--shiki-light:#5C6A72;--shiki-dark:#54B9FF;">:</span></span>
<span class="line"><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">  vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;&gt;</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;"> groupAnagrams</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&lt;</span><span style="--shiki-light:#3A94C5;--shiki-dark:#ACAFFF;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&gt;</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-light-font-style:inherit;--shiki-dark:#4BF3C8;--shiki-dark-font-style:italic;"> strs</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">)</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> {</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    unordered_map</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">string,vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> afterorder;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">auto</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s:strs){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">      string temp </span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">=</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> s;</span></span>
<span class="line"><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">      sort</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">temp</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">begin</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(),</span><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">temp</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">end</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">());</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      afterorder</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[temp]</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(s) ;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">vector</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&lt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">string</span><span style="--shiki-light:#F57D26;--shiki-dark:#54B9FF;">&gt;&gt;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    for</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(</span><span style="--shiki-light:#3A94C5;--shiki-dark:#54B9FF;">auto</span><span style="--shiki-light:#F57D26;--shiki-dark:#EEF0F9;">&amp;</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">[_,second]:afterorder){</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#4BF3C8;">      res</span><span style="--shiki-light:#939F91;--shiki-dark:#EEF0F9;">.</span><span style="--shiki-light:#8DA101;--shiki-dark:#00DAEF;">push_back</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">(second);</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">    }</span></span>
<span class="line"><span style="--shiki-light:#F85552;--shiki-dark:#54B9FF;">    return</span><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;"> res;</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">  }</span></span>
<span class="line"><span style="--shiki-light:#5C6A72;--shiki-dark:#EEF0F9;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const p=i(e,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/code/m3csyiki/","title":"字母异位组分词","lang":"zh-CN","frontmatter":{"title":"字母异位组分词","createTime":"2024/12/13 20:04:41","permalink":"/code/m3csyiki/"},"headers":[],"readingTime":{"minutes":0.66,"words":199},"git":{"updatedTime":1734096157000,"contributors":[{"name":"TenThousandOne","username":"TenThousandOne","email":"w13852770506@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/TenThousandOne?v=4","url":"https://github.com/TenThousandOne"}],"changelog":[{"hash":"46130eeb1959ce621b34a15fbde6540e52ebb00b","date":1734096157000,"email":"w13852770506@163.com","author":"TenThousandOne","message":"prepare interview","commitUrl":"https://github.com/TenOne506/TenOne506.github.io/commit/46130eeb1959ce621b34a15fbde6540e52ebb00b"}]},"filePathRelative":"notes/code/哈希/字母异位组分词.md","bulletin":false}');export{p as comp,r as data};
